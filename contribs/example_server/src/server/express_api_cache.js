// npm imports
import MemoryCache from 'memory-cache'
import Debug from 'debug'

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
//	
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

// MyDebug - setup a debug log function
const debug = Debug('example-server')

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
//	
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

// TODO add API caching 
// - https://medium.com/the-node-js-collection/simple-server-side-cache-for-express-js-with-node-js-45ff296ca0f0

const apiMemoryCache = new MemoryCache.Cache();
/**
 * 
 * @param {number} durationSeconds 
 * @returns 
 */
const expressApiCache = (durationSeconds) => {
	return (request, response, next) => {
		let key = '__expressApiCache__' + request.originalUrl || request.url
		let cachedBody = apiMemoryCache.get(key)
		if (cachedBody) {
			response.send(cachedBody)
			return
		} else {
			response.sendResponse = response.send
			response.send = (body) => {
				debug(`Creating cache  ttl: ${durationSeconds}-sec key: ${key}`)
				apiMemoryCache.put(key, body, durationSeconds * 1000);
				response.sendResponse(body)
			}
			next()
		}
	}
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
//	
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

export default expressApiCache